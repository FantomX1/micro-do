upstream php-todo-GET {
    server php-todo-read:9000;
}

upstream php-todo-POST {
    server php-todo-write:9000;
}

upstream php-user-GET {
    server php-user-read:9000;
}

upstream php-user-POST {
    server php-user-write:9000;
}

server {
    listen 80;
    listen 443 ssl http2;
    server_name localhost;
    root /var/www/public;

    index index.php;

    include conf.d/basic.conf;

    location = /api/v1/todo/ {
       #TODO: move to config file, except fastcgi_pass
       fastcgi_split_path_info ^(.+\.php)(/.+)$;
       fastcgi_pass    php-todo-$request_method;
       fastcgi_index   index.php;
       include         fastcgi_params;
       fastcgi_param   SCRIPT_FILENAME '/var/www/public/index.php';
       fastcgi_param   PATH_INFO '/';
       fastcgi_param   SCRIPT_NAME '/index.php';
    }
    # POST request goes to php-user-POST and registers a new user
    # GET request goes to php-user-GET and lists all registered users
    location = /api/v1/user {
        #TODO: move to config file, except fastcgi_pass
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass    php-user-$request_method;
        fastcgi_index   index.php;
        include         fastcgi_params;
        fastcgi_param   SCRIPT_FILENAME '/var/www/public/index.php';
        fastcgi_param   PATH_INFO '/';
        fastcgi_param   SCRIPT_NAME '/index.php';
    }
    # GET request goes to php-user-GET and returns a single user
    location ~ ^/api/v1/user/(?<userid>[A-Za-z0-9-]+)$ {
        #TODO: move to config file, except fastcgi_pass and captured variable
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass    php-user-$request_method;
        fastcgi_index   index.php;
        include         fastcgi_params;
        fastcgi_param   SCRIPT_FILENAME '/var/www/public/index.php';
        fastcgi_param   PATH_INFO '/';
        fastcgi_param   SCRIPT_NAME '/index.php';
        fastcgi_param   USER_ID $userid;
    }

    location / {
       # This is cool because no php is touched for static content.
       # include the "?$args" part so non-default permalinks doesn't break when using query string
       try_files $uri $uri/ 404;
    }
}
